% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/onefactor.R
\name{fitstepwise}
\alias{fitstepwise}
\title{Fit lmer model using model selection}
\usage{
fitstepwise(mcr.data, wsbi, mf, crit = c(0.01, 0.05, seq(0.1, 0.8, 0.1)))
}
\arguments{
\item{mcr.data}{A dataframe formatted as described in \code{\link{mkDf}}.
Named thus to interface with the function \code{\link{mcRun}}.}

\item{wsbi}{Whether the design is between-items (TRUE) or within-items
(FALSE).}

\item{mf}{List of the models to be tested, in decreasing order of complexity.}

\item{crit}{alpha level for each likelihood-ratio test of slope variance.}
}
\value{
A single row of a dataframe with number of fields depending on
\code{crit}.  Stepwise lmer models output six values for each alpha level
(i.e., level of \code{crit}.  These values are:

The values are given twice, once from each direction (forward or backward).
Thus, if there are two values of crit, there will be 2 (direction) x 6
(value) x 2 (levels of crit) = 24 values in each row of the dataframe.  To
assemble a dataframe of results from a file into a three-dimensional array,
see \code{\link{reassembleStepwiseFile}}.
\item{fm}{the model that was selected.  4 means that no model
converged.  For forward stepping models, 3 = maximal model was selected; 2 =
model includes only first slope; 1 = model is random intercept only.  For
backward stepping models, 1 = maximal model, 2 = model minus one slope, 3 =
random intercept model.}
\item{t}{t-statistic for the treatment effect}
\item{chi}{chi-square statistic for the likelihood ratio test (1 df)}
\item{pt}{p-value for the t-statistic (normal distribution)}
\item{pchi}{p-value for the chi-square statistic}
}
\description{
Analyzes data using \code{\link{lmer}}, using model selection to test
significance of random slope terms in the model (likelihood ratio tests).
Does forward and backward selection, starting with subject slope or item
slope first (one-factor design only)
}
\examples{

nmc <- 10
pmx <- cbind(randParams(genParamRanges(), nmc, 1001), seed=mkSeeds(nmc, 1001))

x8 <- mkDf(nsubj=24, nitem=24, pmx[8,], wsbi=FALSE)

mf.sfirst <- list(min=Resp ~ Cond + (1 | SubjID) + (1 | ItemID),
                 srs=Resp ~ Cond + (1 + Cond | SubjID) + (1 | ItemID),
                 max=Resp ~ Cond + (1 + Cond | SubjID) + (1 + Cond | ItemID))
mf.ifirst <- list(min=Resp ~ Cond + (1 | SubjID) + (1 | ItemID),
                  irs=Resp ~ Cond + (1 | SubjID) + (1 + Cond | ItemID),
                  max=Resp ~ Cond + (1 + Cond | SubjID) + (1 + Cond | ItemID))

# forward, subj first
fitstepwise(x8, wsbi=FALSE, mf=mf.sfirst, crit=.05)

# forward, item first
fitstepwise(x8, wsbi=FALSE, mf=mf.ifirst, crit=.05)

}
\seealso{
\code{\link{fitlmer}}, 
\code{\link{fitstepwise.bestpath}}, \code{\link{reassembleStepwiseFile}}
}

